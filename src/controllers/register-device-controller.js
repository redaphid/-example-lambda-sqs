// Generated by CoffeeScript 2.4.1
var RegisterDeviceController, _, debug;

debug = require('debug')('meshblu-core-protocol-adapter-http:register-device-controller');

_ = require('lodash');

RegisterDeviceController = class RegisterDeviceController {
  constructor({jobManager, jobToHttp}) {
    this.register = this.register.bind(this);
    this.jobManager = jobManager;
    this.jobToHttp = jobToHttp;
  }

  register(req, res) {
    var job, properties, ref;
    properties = req.body;
    if (!_.isPlainObject(properties)) {
      properties = {};
    }
    if ((properties != null ? (ref = properties.meshblu) != null ? ref.version : void 0 : void 0) !== '2.0.0') {
      if (properties.owner != null) {
        if (properties.discoverWhitelist == null) {
          properties.discoverWhitelist = [];
        }
        if (properties.configureWhitelist == null) {
          properties.configureWhitelist = [];
        }
        if (_.isString(properties.owner)) {
          if (!_.includes(properties.discoverWhitelist, '*')) {
            properties.discoverWhitelist.push(properties.owner);
          }
          if (!_.includes(properties.configureWhitelist, '*')) {
            properties.configureWhitelist.push(properties.owner);
          }
        }
      }
      if (properties.discoverWhitelist == null) {
        properties.discoverWhitelist = ['*'];
      }
      if (properties.configureWhitelist == null) {
        properties.configureWhitelist = ['*'];
      }
      if (properties.sendWhitelist == null) {
        properties.sendWhitelist = ['*'];
      }
      if (properties.receiveWhitelist == null) {
        properties.receiveWhitelist = ['*'];
      }
    }
    req.body = properties;
    job = this.jobToHttp.httpToJob({
      jobType: 'RegisterDevice',
      request: req,
      toUuid: req.params.uuid
    });
    return this.jobManager.do(job, (error, jobResponse) => {
      if (error != null) {
        return res.sendError(error);
      }
      return this.jobToHttp.sendJobResponse({res, jobResponse});
    });
  }

};

module.exports = RegisterDeviceController;
