// Generated by CoffeeScript 2.4.1
var AuthenticateController, MeshbluAuthParser, _, debug;

MeshbluAuthParser = require('../helpers/meshblu-auth-parser');

debug = require('debug')('meshblu-core-protocol-adapter-http:authenticate-controller');

_ = require('lodash');

AuthenticateController = class AuthenticateController {
  constructor({jobManager, jobToHttp}) {
    this.check = this.check.bind(this);
    this.checkDevice = this.checkDevice.bind(this);
    this.jobManager = jobManager;
    this.jobToHttp = jobToHttp;
    this.authParser = new MeshbluAuthParser;
  }

  check(req, res) {
    var job;
    job = this.jobToHttp.httpToJob({
      jobType: 'Authenticate',
      request: req,
      toUuid: req.params.uuid
    });
    return this.jobManager.do(job, (error, jobResponse) => {
      if (error != null) {
        return res.sendError(error);
      }
      return this.jobToHttp.sendJobResponse({jobResponse, res});
    });
  }

  checkDevice(req, res) {
    var job, token, uuid;
    ({uuid} = req.params);
    ({token} = req.query);
    job = this.jobToHttp.httpToJob({
      jobType: 'Authenticate',
      request: req
    });
    job.metadata.auth = {uuid, token};
    return this.jobManager.do(job, (error, jobResponse) => {
      var code;
      if (error != null) {
        return res.sendError(error);
      }
      ({code} = jobResponse.metadata);
      if (code !== 204) {
        return res.status(code).send(JSON.parse(jobResponse.rawData));
      }
      return res.status(200).send({
        uuid: uuid,
        authentication: true
      });
    });
  }

};

module.exports = AuthenticateController;
